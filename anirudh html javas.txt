Anirudh:

_____________________________________________________________________________________________________

Html:

________________________________________________________________________________________________________________________

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Documentary</title>
<link rel="stylesheet" href="music.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
<div class="container">
  <div class="sidebar">
    <a href="artist.html"><h2>Fav playlist</h2></a>
    <form id="searchForm" class="d-flex">
      <input id="searchInput" class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
      <button id="searchBtn" class="btn btn-success" type="submit">Search</button>
    </form>
    <ul id="playlist">
        <li data-src="Kadharalz.mp3" >Kadharalz</li>
        <li data-src="Andha-Kanna-Paathaakaa-MassTamilan.io.mp3" >Andha kanna paathakaa</li>
        <li data-src="Arabic-Kuthu---Halamithi-Habibo-MassTamilan.so.mp3" >Arabic kuthu</li>
        <li data-src="Ethir-Neechal.mp3" >Ethir Neechal</li>
        <li data-src="Pakkam-Vanthu.mp3" >Pakkam vanthu</li>
        <li data-src="Rathamaarey-MassTamilan.dev.mp3" >Rathamaarey</li>
        <li data-src="Selfie-Pulla.mp3" >Selfie pulla</li>
        <li data-src="Vaathi-Coming-MassTamilan.io.mp3" >Vaathi coming</li>
        <li data-src="Nee-Partha.mp3" >Nee partha</li>
        <li data-src="Aathi.mp3" >Aathi</li>
      </ul>
    <ul id="suggestionsList" class="suggestions"></ul>
  </div>
  <div class="player">
    <h2 id="currentSong">Kadharalz</h2>
    <div class="cd-container">
      <div class="cd">
        <img id="currentImage" src="kadharalz.webp" alt="Album Cover">
      </div>
    </div>
    <div class="audio-controls">
      <canvas id="waveformCanvas" width="600" height="100"></canvas> 
      <audio id="myAudio" controls onended="playNext()">
        <source src="Kadharalz.mp3" type="audio/mpeg">
      </audio>
    </div>
    <div class="player-controls">
      <div class="controls">
        <button id="prevBtn" onclick="prevSong()"><i class="bi bi-skip-backward"></i></button>
        <button id="playPauseBtn" onclick="togglePlayPause()"><i class="bi bi-play"></i></button>
        <button id="nextBtn" onclick="nextSong()"><i class="bi bi-skip-forward"></i></button>
      </div>
      <input type="range" id="volumeSlider" min="0" max="1" step="0.01" value="1" onchange="setVolume()">
    </div>
  </div>
</div>
 <script src="music.js"></script>
</body>
</html>

__________________________________________________________________________________________________________________

Javas:

___________________________________________________________________________________________________________________________

const playlist = [
    { title: "Kadharalz", src: "Kadharalz.mp3", image: "kadharalz.webp" },
    { title: "Andha kanna paathakaa", src: "Andha-Kanna-Paathaakaa-MassTamilan.io.mp3", image: "andha kanna paathaka.jpg" },
    { title: "Arabic kuthu", src: "Arabic-Kuthu---Halamithi-Habibo-MassTamilan.so.mp3", image: "arabic kuthu.jpg" },
    { title: "Ethir Neechal", src: "Ethir-Neechal.mp3", image: "ethir neechal.jpg" },
    { title: "Pakkam vanthu", src: "Pakkam-Vanthu.mp3", image: "pakkam vanthu.jpg" },
    { title: "Rathamaarey", src: "Rathamaarey-MassTamilan.dev.mp3", image: "rathamaarey.avif" },
    { title: "Selfie pulla", src: "Selfie-Pulla.mp3", image: "selfie pulla.jpg" },
    { title: "Vaathi coming", src: "Vaathi-Coming-MassTamilan.io.mp3", image: "Vaathi coming.jpg" },
    { title: "Nee partha", src: "Nee-Partha.mp3", image: "Nee partha.jpg" },
    { title: "Aathi", src: "Aathi.mp3", image: "aathi.jpg"},
  ];
  
  let currentSongIndex = 0;
  let isPlaying = false;
  let audio = document.getElementById("myAudio");
  let playPauseBtn = document.getElementById("playPauseBtn");
  let currentSongTitle = document.getElementById("currentSong");
  let currentImage = document.getElementById("currentImage");
  let playlistItems = document.getElementById("playlist").getElementsByTagName("li");
  
  function playSong(index) {
    currentSongIndex = index;
    audio.src = playlist[index].src;
    currentSongTitle.textContent = playlist[index].title;
    currentImage.src = playlist[index].image;
    audio.play();
    isPlaying = true;
    updatePlayPauseButton();
  }
  
  function updatePlayPauseButton() {
    if (isPlaying) {
      playPauseBtn.innerHTML = '<i class="bi bi-pause"></i>';
    } else {
      playPauseBtn.innerHTML = '<i class="bi bi-play"></i>';
    }
  }
  
  function togglePlayPause() {
    if (isPlaying) {
      audio.pause();
    } else {
      audio.play();
    }
    isPlaying = !isPlaying;
    updatePlayPauseButton();
  }
  
  function prevSong() {
    let newIndex = (currentSongIndex - 1 + playlist.length) % playlist.length;
    playSong(newIndex);
  }
  
  function nextSong() {
    let newIndex = (currentSongIndex + 1) % playlist.length;
    playSong(newIndex);
  }
  
  
  playPauseBtn.addEventListener("click", togglePlayPause);
  
  audio.addEventListener("play", function() {
    isPlaying = true;
    updatePlayPauseButton();
  });
  
  audio.addEventListener("pause", function() {
    isPlaying = false;
    updatePlayPauseButton();
  });
  
  audio.addEventListener("ended", function() {
    nextSong();
  });
  
  
  playSong(currentSongIndex);
  
  
  for (let i = 0; i < playlistItems.length; i++) {
    playlistItems[i].addEventListener("click", function() {
      playSong(i);
    });
  }
  
  
  document.getElementById("volumeSlider").addEventListener("input", function() {
    audio.volume = this.value;
  });
  
  
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const playlistItems = document.querySelectorAll('#playlist li');
    const suggestionsList = document.getElementById('suggestionsList');
  
    searchInput.addEventListener('input', function() {
      const searchTerm = searchInput.value.trim().toLowerCase();
  
      suggestionsList.innerHTML = '';
  
      if (searchTerm.length === 0) {
        playlistItems.forEach(item => {
          item.style.display = 'block';
        });
        return;
      }
  
      const matchedSongs = [];
  
      playlistItems.forEach(item => {
        const songName = item.textContent.trim().toLowerCase();
        const itemVisible = songName.includes(searchTerm);
  
        if (itemVisible) {
          matchedSongs.push(songName);
        }
      });
  
      matchedSongs.forEach(song => {
        const suggestionItem = document.createElement('li');
        suggestionItem.textContent = song;
        suggestionItem.addEventListener('click', function() {
          searchInput.value = song;
          suggestionsList.innerHTML = '';
          filterPlaylist(song);
        });
        suggestionsList.appendChild(suggestionItem);
      });
  
      playlistItems.forEach(item => {
        const songName = item.textContent.trim().toLowerCase();
        const itemVisible = songName.includes(searchTerm);
        if (itemVisible) {
          item.style.display = 'block';
        } else {
          item.style.display = 'none';
        }
      });
    });
  
    function filterPlaylist(songName) {
      playlistItems.forEach(item => {
        const itemName = item.textContent.trim().toLowerCase();
        const itemVisible = itemName.includes(songName);
        if (itemVisible) {
          item.style.display = 'block';
        } else {
          item.style.display = 'none';
        }
      });
    }
  });
  
  document.addEventListener('DOMContentLoaded', function() {
    const playlist = [
        { title: "Kadharalz", src: "Kadharalz.mp3", image: "kadharalz.webp" },
        { title: "Andha kanna paathakaa", src: "Andha-Kanna-Paathaakaa-MassTamilan.io.mp3", image: "andha kanna paathaka.jpg" },
        { title: "Arabic kuthu", src: "Arabic-Kuthu---Halamithi-Habibo-MassTamilan.so.mp3", image: "arabic kuthu.jpg" },
        { title: "Ethir Neechal", src: "Ethir-Neechal.mp3", image: "ethir neechal.jpg" },
        { title: "Pakkam vanthu", src: "Pakkam-Vanthu.mp3", image: "pakkam vanthu.jpg" },
        { title: "Rathamaarey", src: "Rathamaarey-MassTamilan.dev.mp3", image: "rathamaarey.avif" },
        { title: "Selfie pulla", src: "Selfie-Pulla.mp3", image: "selfie pulla.jpg" },
        { title: "Vaathi coming", src: "Vaathi-Coming-MassTamilan.io.mp3", image: "Vaathi coming.jpg" },
        { title: "Nee partha", src: "Nee-Partha.mp3", image: "Nee partha.jpg" },
        { title: "Aathi", src: "Aathi.mp3", image: "aathi.jpg"},
      ];
  
    const audio = document.getElementById('myAudio');
    const playPauseBtn = document.getElementById('playPauseBtn');
    let currentSongIndex = 0;
  
  
    function initPlayer() {
      updateSongInfo(currentSongIndex);
    }
  
  
    function updateSongInfo(index) {
      const currentSong = playlist[index];
      document.getElementById('currentSong').textContent = currentSong.name;
      audio.src = currentSong.src;
      audio.load(); 
    }
  
  
    function togglePlayPause() {
      if (audio.paused) {
        audio.play();
        playPauseBtn.innerHTML = '<i class="bi bi-pause"></i> Pause';
      } else {
        audio.pause();
        playPauseBtn.innerHTML = '<i class="bi bi-play"></i> Play';
      }
    }
  
  
    document.getElementById('prevBtn').addEventListener('click', function() {
      currentSongIndex = (currentSongIndex - 1 + playlist.length) % playlist.length;
      updateSongInfo(currentSongIndex);
      if (!audio.paused) {
        audio.play(); 
      }
    });
  
    document.getElementById('nextBtn').addEventListener('click', function() {
      currentSongIndex = (currentSongIndex + 1) % playlist.length;
      updateSongInfo(currentSongIndex);
      if (!audio.paused) {
        audio.play(); 
      }
    });
  
  
    initPlayer();
  
    playPauseBtn.addEventListener('click', togglePlayPause);
  });
  const audioContext = new (window.AudioContext || window.webkitAudioContext)();
  const analyser = audioContext.createAnalyser();
  const audioElement = document.getElementById('myAudio');
  const canvas = document.getElementById('waveformCanvas');
  const canvasCtx = canvas.getContext('2d');
  
  const source = audioContext.createMediaElementSource(audioElement);
  source.connect(analyser);
  analyser.connect(audioContext.destination);
  
  analyser.fftSize = 256; 
  const bufferLength = analyser.frequencyBinCount;
  const dataArray = new Uint8Array(bufferLength);
  function drawWaveform() {
    analyser.getByteTimeDomainData(dataArray);
  
    canvasCtx.fillStyle = '#181818'; 
    canvasCtx.fillRect(0, 0, canvas.width, canvas.height);
  
    canvasCtx.lineWidth = 2;
    canvasCtx.strokeStyle = '#1db954'; 
    canvasCtx.beginPath();
  
    const sliceWidth = canvas.width * 1.0 / bufferLength;
    let x = 0;
  
    for (let i = 0; i < bufferLength; i++) {
      const v = dataArray[i] / 128.0; 
      const y = v * canvas.height / 2;
  
      if (i === 0) {
        canvasCtx.moveTo(x, y);
      } else {
        canvasCtx.lineTo(x, y);
      }
  
      x += sliceWidth;
    }
  
    canvasCtx.lineTo(canvas.width, canvas.height / 2);
    canvasCtx.stroke();
  
    requestAnimationFrame(drawWaveform);
  }
  
  drawWaveform();
  